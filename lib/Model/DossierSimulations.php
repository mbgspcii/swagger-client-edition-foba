<?php
/**
 * DossierSimulations
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * DossierSimulations Class Doc Comment
 *
 * @category    Class
 * @description 
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class DossierSimulations implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'date_simulation' => '\DateTime',
        'personne_principale' => '\Swagger\Client\Model\Personne',
        'personne_conjoint' => '\Swagger\Client\Model\Personne',
        'simulation_budget_retraite' => '\Swagger\Client\Model\SimulationBudgetRetraite',
        'disponibles_fiscaux' => '\Swagger\Client\Model\DisponiblesFiscaux',
        'simulations_epargne' => '\Swagger\Client\Model\SimulationEpargne[]'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'date_simulation' => 'dateSimulation',
        'personne_principale' => 'personnePrincipale',
        'personne_conjoint' => 'personneConjoint',
        'simulation_budget_retraite' => 'simulationBudgetRetraite',
        'disponibles_fiscaux' => 'disponiblesFiscaux',
        'simulations_epargne' => 'simulationsEpargne'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'date_simulation' => 'setDateSimulation',
        'personne_principale' => 'setPersonnePrincipale',
        'personne_conjoint' => 'setPersonneConjoint',
        'simulation_budget_retraite' => 'setSimulationBudgetRetraite',
        'disponibles_fiscaux' => 'setDisponiblesFiscaux',
        'simulations_epargne' => 'setSimulationsEpargne'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'date_simulation' => 'getDateSimulation',
        'personne_principale' => 'getPersonnePrincipale',
        'personne_conjoint' => 'getPersonneConjoint',
        'simulation_budget_retraite' => 'getSimulationBudgetRetraite',
        'disponibles_fiscaux' => 'getDisponiblesFiscaux',
        'simulations_epargne' => 'getSimulationsEpargne'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $date_simulation date de la simulation
      * @var \DateTime
      */
    protected $date_simulation;
    
    /**
      * $personne_principale 
      * @var \Swagger\Client\Model\Personne
      */
    protected $personne_principale;
    
    /**
      * $personne_conjoint 
      * @var \Swagger\Client\Model\Personne
      */
    protected $personne_conjoint;
    
    /**
      * $simulation_budget_retraite contient l'ensemble des donn\u00E9es li\u00E9es \u00E0 la simulation effectu\u00E9e depuis MonBudgetReraite. Cette simulation est la premi\u00E8re dans le chainage et est forc\u00E9ment valu\u00E9e
      * @var \Swagger\Client\Model\SimulationBudgetRetraite
      */
    protected $simulation_budget_retraite;
    
    /**
      * $disponibles_fiscaux contient la partie disponible fiscal de chacun des produits d'\u00E9pargne simul\u00E9s (Madelin,Perp)
      * @var \Swagger\Client\Model\DisponiblesFiscaux
      */
    protected $disponibles_fiscaux;
    
    /**
      * $simulations_epargne contient les diff\u00E9rentes simulations de souscription de produits d'\u00E9pargne (Madelin,Perp,Assurancevie...)
      * @var \Swagger\Client\Model\SimulationEpargne[]
      */
    protected $simulations_epargne;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->date_simulation = $data["date_simulation"];
            $this->personne_principale = $data["personne_principale"];
            $this->personne_conjoint = $data["personne_conjoint"];
            $this->simulation_budget_retraite = $data["simulation_budget_retraite"];
            $this->disponibles_fiscaux = $data["disponibles_fiscaux"];
            $this->simulations_epargne = $data["simulations_epargne"];
        }
    }
    
    /**
     * Gets date_simulation
     * @return \DateTime
     */
    public function getDateSimulation()
    {
        return $this->date_simulation;
    }
  
    /**
     * Sets date_simulation
     * @param \DateTime $date_simulation date de la simulation
     * @return $this
     */
    public function setDateSimulation($date_simulation)
    {
        
        $this->date_simulation = $date_simulation;
        return $this;
    }
    
    /**
     * Gets personne_principale
     * @return \Swagger\Client\Model\Personne
     */
    public function getPersonnePrincipale()
    {
        return $this->personne_principale;
    }
  
    /**
     * Sets personne_principale
     * @param \Swagger\Client\Model\Personne $personne_principale 
     * @return $this
     */
    public function setPersonnePrincipale($personne_principale)
    {
        
        $this->personne_principale = $personne_principale;
        return $this;
    }
    
    /**
     * Gets personne_conjoint
     * @return \Swagger\Client\Model\Personne
     */
    public function getPersonneConjoint()
    {
        return $this->personne_conjoint;
    }
  
    /**
     * Sets personne_conjoint
     * @param \Swagger\Client\Model\Personne $personne_conjoint 
     * @return $this
     */
    public function setPersonneConjoint($personne_conjoint)
    {
        
        $this->personne_conjoint = $personne_conjoint;
        return $this;
    }
    
    /**
     * Gets simulation_budget_retraite
     * @return \Swagger\Client\Model\SimulationBudgetRetraite
     */
    public function getSimulationBudgetRetraite()
    {
        return $this->simulation_budget_retraite;
    }
  
    /**
     * Sets simulation_budget_retraite
     * @param \Swagger\Client\Model\SimulationBudgetRetraite $simulation_budget_retraite contient l'ensemble des donn\u00E9es li\u00E9es \u00E0 la simulation effectu\u00E9e depuis MonBudgetReraite. Cette simulation est la premi\u00E8re dans le chainage et est forc\u00E9ment valu\u00E9e
     * @return $this
     */
    public function setSimulationBudgetRetraite($simulation_budget_retraite)
    {
        
        $this->simulation_budget_retraite = $simulation_budget_retraite;
        return $this;
    }
    
    /**
     * Gets disponibles_fiscaux
     * @return \Swagger\Client\Model\DisponiblesFiscaux
     */
    public function getDisponiblesFiscaux()
    {
        return $this->disponibles_fiscaux;
    }
  
    /**
     * Sets disponibles_fiscaux
     * @param \Swagger\Client\Model\DisponiblesFiscaux $disponibles_fiscaux contient la partie disponible fiscal de chacun des produits d'\u00E9pargne simul\u00E9s (Madelin,Perp)
     * @return $this
     */
    public function setDisponiblesFiscaux($disponibles_fiscaux)
    {
        
        $this->disponibles_fiscaux = $disponibles_fiscaux;
        return $this;
    }
    
    /**
     * Gets simulations_epargne
     * @return \Swagger\Client\Model\SimulationEpargne[]
     */
    public function getSimulationsEpargne()
    {
        return $this->simulations_epargne;
    }
  
    /**
     * Sets simulations_epargne
     * @param \Swagger\Client\Model\SimulationEpargne[] $simulations_epargne contient les diff\u00E9rentes simulations de souscription de produits d'\u00E9pargne (Madelin,Perp,Assurancevie...)
     * @return $this
     */
    public function setSimulationsEpargne($simulations_epargne)
    {
        
        $this->simulations_epargne = $simulations_epargne;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
