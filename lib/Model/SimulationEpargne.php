<?php
/**
 * SimulationEpargne
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   http://github.com/swagger-api/swagger-codegen
 * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link     https://github.com/swagger-api/swagger-codegen
 */
/**
 *  Copyright 2016 SmartBear Software
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
/**
 * SimulationEpargne Class Doc Comment
 *
 * @category    Class
 * @description contient les donn\u00E9es d&#39;une simulation sur un produit Epargne
 * @package     Swagger\Client
 * @author      http://github.com/swagger-api/swagger-codegen
 * @license     http://www.apache.org/licenses/LICENSE-2.0 Apache Licene v2
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class SimulationEpargne implements ArrayAccess
{
    /**
      * Array of property to type mappings. Used for (de)serialization 
      * @var string[]
      */
    static $swaggerTypes = array(
        'type_produit' => 'string',
        'nom_produit' => 'string',
        'duree_simulation' => 'int',
        'operations' => '\Swagger\Client\Model\Operations',
        'parametrage_rente' => '\Swagger\Client\Model\ParametrageRente',
        'resultats_epargne' => '\Swagger\Client\Model\EvolutionEpargne[]',
        'resultats_rente' => '\Swagger\Client\Model\EvolutionRente[]',
        'resultats_disponible_fiscal' => '\Swagger\Client\Model\DisponibleFiscalRetraiteMadelinUtilise'
    );
  
    static function swaggerTypes() {
        return self::$swaggerTypes;
    }

    /** 
      * Array of attributes where the key is the local name, and the value is the original name
      * @var string[] 
      */
    static $attributeMap = array(
        'type_produit' => 'typeProduit',
        'nom_produit' => 'nomProduit',
        'duree_simulation' => 'dureeSimulation',
        'operations' => 'operations',
        'parametrage_rente' => 'parametrageRente',
        'resultats_epargne' => 'resultatsEpargne',
        'resultats_rente' => 'resultatsRente',
        'resultats_disponible_fiscal' => 'resultatsDisponibleFiscal'
    );
  
    static function attributeMap() {
        return self::$attributeMap;
    }

    /**
      * Array of attributes to setter functions (for deserialization of responses)
      * @var string[]
      */
    static $setters = array(
        'type_produit' => 'setTypeProduit',
        'nom_produit' => 'setNomProduit',
        'duree_simulation' => 'setDureeSimulation',
        'operations' => 'setOperations',
        'parametrage_rente' => 'setParametrageRente',
        'resultats_epargne' => 'setResultatsEpargne',
        'resultats_rente' => 'setResultatsRente',
        'resultats_disponible_fiscal' => 'setResultatsDisponibleFiscal'
    );
  
    static function setters() {
        return self::$setters;
    }

    /**
      * Array of attributes to getter functions (for serialization of requests)
      * @var string[]
      */
    static $getters = array(
        'type_produit' => 'getTypeProduit',
        'nom_produit' => 'getNomProduit',
        'duree_simulation' => 'getDureeSimulation',
        'operations' => 'getOperations',
        'parametrage_rente' => 'getParametrageRente',
        'resultats_epargne' => 'getResultatsEpargne',
        'resultats_rente' => 'getResultatsRente',
        'resultats_disponible_fiscal' => 'getResultatsDisponibleFiscal'
    );
  
    static function getters() {
        return self::$getters;
    }

    
    /**
      * $type_produit type de produit simul\u00E9 (Madelin, Assurance vie, Perp...)
      * @var string
      */
    protected $type_produit;
    
    /**
      * $nom_produit nom complet du produit
      * @var string
      */
    protected $nom_produit;
    
    /**
      * $duree_simulation dur\u00E9e en ann\u00E9es de la phase d'\u00E9pargne
      * @var int
      */
    protected $duree_simulation;
    
    /**
      * $operations Versements effectu\u00E9s
      * @var \Swagger\Client\Model\Operations
      */
    protected $operations;
    
    /**
      * $parametrage_rente caract\u00E9ristiques de la rente simul\u00E9e
      * @var \Swagger\Client\Model\ParametrageRente
      */
    protected $parametrage_rente;
    
    /**
      * $resultats_epargne tableau d''\u00E9volution de l'\u00E9pargne ann\u00E9es par ann\u00E9es
      * @var \Swagger\Client\Model\EvolutionEpargne[]
      */
    protected $resultats_epargne;
    
    /**
      * $resultats_rente tableau d''\u00E9volution de la rente servie par \u00E2ge
      * @var \Swagger\Client\Model\EvolutionRente[]
      */
    protected $resultats_rente;
    
    /**
      * $resultats_disponible_fiscal informations li\u00E9es \u00E0 l''\u00E9conomie annuelle d'impot r\u00E9alis\u00E9e et \u00E0 la r\u00E9serve fiscale disponible
      * @var \Swagger\Client\Model\DisponibleFiscalRetraiteMadelinUtilise
      */
    protected $resultats_disponible_fiscal;
    

    /**
     * Constructor
     * @param mixed[] $data Associated array of property value initalizing the model
     */
    public function __construct(array $data = null)
    {
        
        if ($data != null) {
            $this->type_produit = $data["type_produit"];
            $this->nom_produit = $data["nom_produit"];
            $this->duree_simulation = $data["duree_simulation"];
            $this->operations = $data["operations"];
            $this->parametrage_rente = $data["parametrage_rente"];
            $this->resultats_epargne = $data["resultats_epargne"];
            $this->resultats_rente = $data["resultats_rente"];
            $this->resultats_disponible_fiscal = $data["resultats_disponible_fiscal"];
        }
    }
    
    /**
     * Gets type_produit
     * @return string
     */
    public function getTypeProduit()
    {
        return $this->type_produit;
    }
  
    /**
     * Sets type_produit
     * @param string $type_produit type de produit simul\u00E9 (Madelin, Assurance vie, Perp...)
     * @return $this
     */
    public function setTypeProduit($type_produit)
    {
        $allowed_values = array("MADELIN", "AssuranceVie", "PERP");
        if (!in_array($type_produit, $allowed_values)) {
            throw new \InvalidArgumentException("Invalid value for 'type_produit', must be one of 'MADELIN', 'AssuranceVie', 'PERP'");
        }
        $this->type_produit = $type_produit;
        return $this;
    }
    
    /**
     * Gets nom_produit
     * @return string
     */
    public function getNomProduit()
    {
        return $this->nom_produit;
    }
  
    /**
     * Sets nom_produit
     * @param string $nom_produit nom complet du produit
     * @return $this
     */
    public function setNomProduit($nom_produit)
    {
        
        $this->nom_produit = $nom_produit;
        return $this;
    }
    
    /**
     * Gets duree_simulation
     * @return int
     */
    public function getDureeSimulation()
    {
        return $this->duree_simulation;
    }
  
    /**
     * Sets duree_simulation
     * @param int $duree_simulation dur\u00E9e en ann\u00E9es de la phase d'\u00E9pargne
     * @return $this
     */
    public function setDureeSimulation($duree_simulation)
    {
        
        $this->duree_simulation = $duree_simulation;
        return $this;
    }
    
    /**
     * Gets operations
     * @return \Swagger\Client\Model\Operations
     */
    public function getOperations()
    {
        return $this->operations;
    }
  
    /**
     * Sets operations
     * @param \Swagger\Client\Model\Operations $operations Versements effectu\u00E9s
     * @return $this
     */
    public function setOperations($operations)
    {
        
        $this->operations = $operations;
        return $this;
    }
    
    /**
     * Gets parametrage_rente
     * @return \Swagger\Client\Model\ParametrageRente
     */
    public function getParametrageRente()
    {
        return $this->parametrage_rente;
    }
  
    /**
     * Sets parametrage_rente
     * @param \Swagger\Client\Model\ParametrageRente $parametrage_rente caract\u00E9ristiques de la rente simul\u00E9e
     * @return $this
     */
    public function setParametrageRente($parametrage_rente)
    {
        
        $this->parametrage_rente = $parametrage_rente;
        return $this;
    }
    
    /**
     * Gets resultats_epargne
     * @return \Swagger\Client\Model\EvolutionEpargne[]
     */
    public function getResultatsEpargne()
    {
        return $this->resultats_epargne;
    }
  
    /**
     * Sets resultats_epargne
     * @param \Swagger\Client\Model\EvolutionEpargne[] $resultats_epargne tableau d''\u00E9volution de l'\u00E9pargne ann\u00E9es par ann\u00E9es
     * @return $this
     */
    public function setResultatsEpargne($resultats_epargne)
    {
        
        $this->resultats_epargne = $resultats_epargne;
        return $this;
    }
    
    /**
     * Gets resultats_rente
     * @return \Swagger\Client\Model\EvolutionRente[]
     */
    public function getResultatsRente()
    {
        return $this->resultats_rente;
    }
  
    /**
     * Sets resultats_rente
     * @param \Swagger\Client\Model\EvolutionRente[] $resultats_rente tableau d''\u00E9volution de la rente servie par \u00E2ge
     * @return $this
     */
    public function setResultatsRente($resultats_rente)
    {
        
        $this->resultats_rente = $resultats_rente;
        return $this;
    }
    
    /**
     * Gets resultats_disponible_fiscal
     * @return \Swagger\Client\Model\DisponibleFiscalRetraiteMadelinUtilise
     */
    public function getResultatsDisponibleFiscal()
    {
        return $this->resultats_disponible_fiscal;
    }
  
    /**
     * Sets resultats_disponible_fiscal
     * @param \Swagger\Client\Model\DisponibleFiscalRetraiteMadelinUtilise $resultats_disponible_fiscal informations li\u00E9es \u00E0 l''\u00E9conomie annuelle d'impot r\u00E9alis\u00E9e et \u00E0 la r\u00E9serve fiscale disponible
     * @return $this
     */
    public function setResultatsDisponibleFiscal($resultats_disponible_fiscal)
    {
        
        $this->resultats_disponible_fiscal = $resultats_disponible_fiscal;
        return $this;
    }
    
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset 
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->$offset);
    }
  
    /**
     * Gets offset.
     * @param  integer $offset Offset 
     * @return mixed 
     */
    public function offsetGet($offset)
    {
        return $this->$offset;
    }
  
    /**
     * Sets value based on offset.
     * @param  integer $offset Offset 
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        $this->$offset = $value;
    }
  
    /**
     * Unsets offset.
     * @param  integer $offset Offset 
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->$offset);
    }
  
    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        } else {
            return json_encode(\Swagger\Client\ObjectSerializer::sanitizeForSerialization($this));
        }
    }
}
